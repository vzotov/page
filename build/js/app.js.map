{"version":3,"sources":["../../src/js/app.js","../../src/js/json.js","../../src/js/projects.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["var app = angular.module( 'app', ['ngRoute', 'ngResource', 'jsonService'] );\n\napp.config( ['$routeProvider',\n    '$resourceProvider',\n    function ( $routeProvider ) {\n        $routeProvider\n            .when( '/', {\n                templateUrl: 'partials/home-page.html',\n                isHomePage: true\n            } )\n            .when( '/about', {\n                templateUrl: 'partials/about.html'\n            } )\n            .when( '/projects', {\n                templateUrl: 'partials/projects.html',\n                controller: 'projectsController'\n            } )\n            .otherwise( {\n                redirectTo: '/'\n            } );\n    }] );\n\napp.controller( 'appController', [\n    '$scope', '$rootScope', '$route', 'JSONData',\n    function ( $scope, $rootScope, $route, JSONData ) {\n        $scope.$on( '$routeChangeStart', function ( next, current ) {\n            $rootScope.isHomePage = current.$$route.isHomePage;\n        } );\n    }] );","angular.module( 'jsonService', ['ngResource'] )\n    .factory( 'JSONData', ['$resource', '$q',\n        function ( $resource, $q ) {\n            var jsonData = function ( fileName ) {\n                var jsonData, get;\n                get = function () {\n                    var deferred = $q.defer();\n                    if ( !jsonData ) {\n                        $resource( ['/page/data/resources/', fileName, '.json'].join( '' ) )\n                            .get( function ( data ) {\n                                if ( data.success ) {\n                                    jsonData = data;\n                                    deferred.resolve( jsonData.data );\n                                }\n                            } );\n                    } else {\n                        deferred.resolve( jsonData.data );\n                    }\n\n                    return deferred.promise;\n                };\n                return {\n                    get: get\n                };\n            };\n\n            return function ( fileName ) {\n                return new jsonData( fileName );\n            };\n        }] );","app.controller( 'projectsController', ['$scope', 'JSONData', function ( $scope, JSONData ) {\n    var scopeProjects = [],\n        mergeProjectsAndSkills = function ( projects, skills ) {\n            projects.forEach( function ( project ) {\n                project.skills = _.map( project.skills, function (skillId) {\n                    if( _.isString(skillId)) {\n                        return _.find( skills, function ( skill ) {\n                                return skill.id === skillId;\n                            } ) || {name: skillId};\n                    } else {\n                        return skillId;\n                    }\n                } );\n            } );\n            return projects;\n        };\n\n    JSONData('projects')\n        .get()\n        .then( function ( projects ) {\n            scopeProjects = projects;\n            JSONData('skills')\n                .get()\n                .then( function ( skills ) {\n                    $scope.projects = mergeProjectsAndSkills( scopeProjects, skills );\n                } );\n        } );\n\n\n}] );"]}